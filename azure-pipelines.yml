# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  azureContainerRegistry: cooking.azurecr.io
  azureSubscriptionEndpoint: cookingService1
  dockerRegistryServiceConnection: '9caad9e1-e4e5-4b9a-8499-0241ecb67f61'
  imageRepository: 'dabliuojtekcooking'
  containerRegistry: 'cooking.azurecr.io'
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DockerCompose@0
      displayName: Build services
      inputs:
        action: Build services
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(azureContainerRegistry)
        dockerComposeFile: docker-compose.yml
        projectName: $(Build.Repository.Name)
        qualifyImageNames: true
        additionalImageTags: tag
        dockerComposeFileArgs: ENV=dev
    - task: DockerCompose@0
      displayName: Push services
      inputs:
        action: Push services
        azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
        azureContainerRegistry: $(azureContainerRegistry)
        dockerComposeFile: docker-compose.yml
        projectName: $(Build.Repository.Name)
        qualifyImageNames: true
        additionalImageTags: tag
    - task: Npm@1
      displayName: Run Cypress Tests
      inputs:
        command: 'custom'
        workingDir: '/cooking-e2e'
        customCommand: 'run e2e:run'
    - task: PublishTestResults@2
      inputs:
        testResultsFormat: 'JUnit'
        testResultsFiles: '*.xml'
        searchFolder: '$(System.DefaultWorkingDirectory)/cypress/reports/junit'
        testRunTitle: 'Publish Test Results'